services:
  postgres:
    image: postgres:15-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Server/migrations:/docker-entrypoint-initdb.d
    mem_limit: 512m
    mem_reservation: 256m

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    env_file:
      - ./.env
    volumes:
      - redis_data:/data
    restart: always

  backend:
    build:
      context: ./Server
      dockerfile: Dockerfile
    ports:
      - "4200:4200"

    networks:
      - default

    env_file:
      - ./.env
    environment:
      PORT: 4200
      DB_HOST: postgres
      DB_PORT: 5432
      DOCKER_ENV: true
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    mem_limit: 512m
    mem_reservation: 256m

  frontend:
    build: 
      context: ./Client              
      dockerfile: Dockerfile

    networks:
      - default

    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_started

volumes:
  postgres_data:
  redis_data: